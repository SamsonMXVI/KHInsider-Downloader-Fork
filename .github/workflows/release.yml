name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - "v*" # Only release on version tags like v1.0.0

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: darwin
            goarch: arm # Darwin arm is not standard
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p dist
          EXT=""
          if [ "${GOOS}" = "windows" ]; then EXT=".exe"; fi
          OUTPUT="KHInsider-Downloader-${GOOS}-${GOARCH}${EXT}"
          CGO_ENABLED=0 go build -o dist/$OUTPUT .

      - name: Archive binaries with config.json
        run: |
          cd dist
          for f in *; do
            # Create zip with the binary and config.json
            zip "${f%.*}.zip" "$f" "../config.json"
            rm "$f"
          done

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/*.zip

  release:
    name: Release to GitHub
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
